/** * Created by wangxiaoyu on 2017/8/17. */import React, { Component , PropTypes } from 'react';const buttonStyle = {margin:'10px',backgroundColor:"#f58",color:"white",borderRadius:'5px',outline:"none"};export default class Counter extends Component {    constructor(props){        super(props);        console.log('enter constructor: '+ props.caption );        this.onClickAddButton = this.onClickAddButton.bind(this);        this.onClickReduceButton = this.onClickReduceButton.bind(this);        this.state = {            count:this.props.initValue        }    }    onClickAddButton(){       this.updateCount(true);    }    onClickReduceButton(){       this.updateCount(false);    }    updateCount(isAdd){        const previousValue = this.state.count;        const newValue = isAdd ? previousValue+1 : previousValue-1;        this.setState({count:newValue});        this.props.onUpdate(newValue,previousValue);    }    shouldComponentUpdate(nextProps,nextState){        return (nextProps.caption !== this.props.caption) ||            (nextProps.count !== this.props.count)    }    render(){        console.log('enter render ' + this.props.caption);        const {caption} = this.props;        return (            <div>                <button style={buttonStyle} onClick={this.onClickAddButton}>+</button>                <button style={buttonStyle} onClick={this.onClickReduceButton}>-</button>                <span>{caption} count:{this.state.count}</span>            </div>        )    }}Counter.propTypes = {    caption:PropTypes.string.isRequired,    initValue:PropTypes.number};Counter.defaultProps = {initValue : 0, onUpdate:f=>f};