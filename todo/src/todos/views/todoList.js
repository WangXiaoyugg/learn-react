/** * Created by wangxiaoyu on 2017/8/20. */import TodoItem from './todoItem'import {bindActionCreators}  from 'redux';import React from 'react';import {toggleTodo,removeTodo} from '../actions';import {FilterTypes} from '../../constants';import {connect}  from 'react-redux';const TodoList = ({todos, onToggleTodo, onRemoveTodo}) => {    return (        <ul className="todo-list">            {                todos.map((item) => (                    <TodoItem                        key={item.id}                        text={item.text}                        id={item.id}                        completed={item.completed}                    />                ))            }        </ul>    )};const selectVisibleTodos = (todos, filter) => {    switch (filter) {        case FilterTypes.ALL:            return todos;        case FilterTypes.COMPLETED:            return todos.filter(item => item.completed);        case FilterTypes.UNCOMPLETED:            return todos.filter(item => !item.completed);        default:            throw new Error('unsupported filter');    }};const mapStateToProps = (state) => {    return {        todos:selectVisibleTodos(state.todos,state.filter)    }};// const mapDispatchToProps = (dispatch) => {//     return {//         onToggleTodo: (id) => {//             dispatch(toggleTodo(id))//         },//         onRemoveTodo: (id) => {//             dispatch(removeTodo(id))//         }//     }// }// const mapDispatchToProps = (dispatch) => bindActionCreators({//     onToggleTodo: toggleTodo,//     onRemoveTodo: removeTodo// },dispatch);export default  connect(mapStateToProps)(TodoList);